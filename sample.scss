// Simple Grid

$breakpoints: (mobile: 0, // We are mobile first so we start from 0
  tablet: 768px,
  desktop: 1200px,
) !default;

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-column-gap: 1em;
  grid-row-gap: 1em;
}

@each $breakpoint in map-keys($breakpoints) {
  $breakpoint-width: map-get($breakpoints, $breakpoint);

  @media (min-width: $breakpoint-width) {
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        grid-column: span $i;
      }
    }
  }
}
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}
// Responsive text mixin
@mixin responsiveText ($minSize: $font-size, $maxSize: 28px, $minWidth: 420px, $maxWidth: 980px) {


$mxS: strip-unit($maxSize);
$mnS: strip-unit($minSize);
$mxW: strip-unit($maxWidth);
$mnW: strip-unit($minWidth);

  font-size: calc( #{$minSize} + (#{$mxS} - #{$mnS}) * (100vw - #{$minWidth}) / (#{$mxW} - #{$mnW}));
  
  @media screen and (max-width: $minWidth ){
      font-size: $minSize;
  }
  
  @media screen and (min-width: $maxWidth ){
      font-size: $maxSize;
  }

}

h1 {
  @include responsiveText(24px, 72px);
}

.texter {
  @include responsiveText(12px, 50px);
  max-width: 980px;
  margin:auto;
}
